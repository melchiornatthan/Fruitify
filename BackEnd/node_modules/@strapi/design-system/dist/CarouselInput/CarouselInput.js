var I = Object.defineProperty;
var d = Object.getOwnPropertySymbols;
var u = Object.prototype.hasOwnProperty, p = Object.prototype.propertyIsEnumerable;
var a = (r, o, i) => o in r ? I(r, o, { enumerable: !0, configurable: !0, writable: !0, value: i }) : r[o] = i, c = (r, o) => {
  for (var i in o || (o = {}))
    u.call(o, i) && a(r, i, o[i]);
  if (d)
    for (var i of d(o))
      p.call(o, i) && a(r, i, o[i]);
  return r;
};
var f = (r, o) => {
  var i = {};
  for (var t in r)
    u.call(r, t) && o.indexOf(t) < 0 && (i[t] = r[t]);
  if (r != null && d)
    for (var t of d(r))
      o.indexOf(t) < 0 && p.call(r, t) && (i[t] = r[t]);
  return i;
};
import n from "react";
import e from "prop-types";
import { Carousel as P } from "./Carousel.js";
import { Field as T } from "../Field/Field.js";
import { FieldLabel as C } from "../Field/FieldLabel.js";
import "../Field/FieldInput.js";
import { FieldHint as O } from "../Field/FieldHint.js";
import { FieldError as S } from "../Field/FieldError.js";
import "../Field/FieldContext.js";
import "../Field/FieldAction.js";
import { Stack as _ } from "../Stack/Stack.js";
import { useId as k } from "../helpers/useId.js";
const g = (A) => {
  var l = A, {
    actions: r,
    children: o,
    error: i,
    hint: t,
    label: s,
    labelAction: q,
    nextLabel: R,
    onNext: b,
    onPrevious: v,
    previousLabel: E,
    required: y,
    secondaryLabel: L,
    selectedSlide: F,
    id: h
  } = l, x = f(l, [
    "actions",
    "children",
    "error",
    "hint",
    "label",
    "labelAction",
    "nextLabel",
    "onNext",
    "onPrevious",
    "previousLabel",
    "required",
    "secondaryLabel",
    "selectedSlide",
    "id"
  ]);
  const m = k("carouselinput", h);
  return /* @__PURE__ */ n.createElement(T, {
    hint: t,
    error: i,
    id: m
  }, /* @__PURE__ */ n.createElement(_, {
    spacing: 1
  }, s && /* @__PURE__ */ n.createElement(C, {
    required: y,
    action: q
  }, s), /* @__PURE__ */ n.createElement(P, c({
    actions: r,
    label: s,
    nextLabel: R,
    onNext: b,
    onPrevious: v,
    previousLabel: E,
    secondaryLabel: L,
    selectedSlide: F,
    id: m
  }, x), o), /* @__PURE__ */ n.createElement(O, null), /* @__PURE__ */ n.createElement(S, null)));
};
g.defaultProps = {
  actions: void 0,
  error: void 0,
  hint: void 0,
  id: void 0,
  required: !1,
  secondaryLabel: void 0
};
g.propTypes = {
  actions: e.node,
  children: e.node.isRequired,
  error: e.string,
  hint: e.oneOfType([e.string, e.node, e.arrayOf(e.node)]),
  id: e.string,
  label: e.string.isRequired,
  labelAction: e.element,
  nextLabel: e.string.isRequired,
  onNext: e.func.isRequired,
  onPrevious: e.func.isRequired,
  previousLabel: e.string.isRequired,
  required: e.bool,
  secondaryLabel: e.string,
  selectedSlide: e.number.isRequired
};
export {
  g as CarouselInput
};
