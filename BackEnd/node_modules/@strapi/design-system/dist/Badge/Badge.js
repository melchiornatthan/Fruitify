var y = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var l = Object.prototype.hasOwnProperty, p = Object.prototype.propertyIsEnumerable;
var m = (r, t, e) => t in r ? y(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e, u = (r, t) => {
  for (var e in t || (t = {}))
    l.call(t, e) && m(r, e, t[e]);
  if (i)
    for (var e of i(t))
      p.call(t, e) && m(r, e, t[e]);
  return r;
};
var d = (r, t) => {
  var e = {};
  for (var o in r)
    l.call(r, o) && t.indexOf(o) < 0 && (e[o] = r[o]);
  if (r != null && i)
    for (var o of i(r))
      t.indexOf(o) < 0 && p.call(r, o) && (e[o] = r[o]);
  return e;
};
import s from "react";
import n from "prop-types";
import { Flex as b } from "../Flex/Flex.js";
import { Typography as C } from "../Typography/Typography.js";
const c = (h) => {
  var a = h, { active: r, textColor: t, backgroundColor: e, children: o, minWidth: g } = a, f = d(a, ["active", "textColor", "backgroundColor", "children", "minWidth"]);
  return /* @__PURE__ */ s.createElement(b, u({
    inline: !0,
    alignItem: "center",
    justifyContent: "center",
    minWidth: g,
    padding: 1,
    background: r ? "primary100" : e,
    hasRadius: !0
  }, f), /* @__PURE__ */ s.createElement(C, {
    variant: "sigma",
    textColor: r ? "primary600" : t
  }, o));
};
c.defaultProps = {
  active: !1,
  backgroundColor: "neutral100",
  minWidth: 5,
  textColor: "neutral600"
};
c.propTypes = {
  active: n.bool,
  backgroundColor: n.string,
  children: n.oneOfType([n.number, n.string]).isRequired,
  minWidth: n.number,
  textColor: n.string
};
export {
  c as Badge
};
