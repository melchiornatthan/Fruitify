var J = Object.defineProperty;
var v = Object.getOwnPropertySymbols;
var h = Object.prototype.hasOwnProperty, D = Object.prototype.propertyIsEnumerable;
var A = (e, o, t) => o in e ? J(e, o, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[o] = t, S = (e, o) => {
  for (var t in o || (o = {}))
    h.call(o, t) && A(e, t, o[t]);
  if (v)
    for (var t of v(o))
      D.call(o, t) && A(e, t, o[t]);
  return e;
};
var k = (e, o) => {
  var t = {};
  for (var a in e)
    h.call(e, a) && o.indexOf(a) < 0 && (t[a] = e[a]);
  if (e != null && v)
    for (var a of v(e))
      o.indexOf(a) < 0 && D.call(e, a) && (t[a] = e[a]);
  return t;
};
import n, { useState as Q, useRef as R } from "react";
import r from "prop-types";
import P from "@strapi/icons/CarretDown";
import Z from "styled-components";
import { sizes as C } from "../themes/sizes.js";
import { NumberParser as ee, NumberFormatter as re } from "@internationalized/number";
import { Field as te } from "../Field/Field.js";
import { FieldLabel as oe } from "../Field/FieldLabel.js";
import { FieldInput as ne } from "../Field/FieldInput.js";
import { FieldHint as ie } from "../Field/FieldHint.js";
import { FieldError as ae } from "../Field/FieldError.js";
import "../Field/FieldContext.js";
import "../Field/FieldAction.js";
import { Stack as se } from "../Stack/Stack.js";
import { Icon as V } from "../Icon/Icon.js";
import { useId as le } from "../helpers/useId.js";
import { KeyboardKeys as O } from "../helpers/keyboardKeys.js";
import { getDefaultLocale as $ } from "../helpers/getDefaultLocale.js";
const q = Z.button`
  display: flex;
  height: 1rem;
  align-items: ${({ reverse: e }) => e ? "flex-end" : "flex-start"};
  transform: translateY(${({ reverse: e }) => e ? "-2px" : "2px"});
  cursor: ${({ disabled: e }) => e ? "not-allowed" : void 0};
  svg {
    display: block;
    height: ${4 / 16}rem;
    transform: ${({ reverse: e }) => e ? "rotateX(180deg)" : void 0};
  }
`, K = "", x = n.forwardRef(
  (me, j) => {
    var w = me, {
      size: e,
      startAction: o,
      name: t,
      hint: a,
      error: L,
      label: E,
      labelAction: T,
      locale: z,
      id: B,
      onValueChange: u,
      value: c,
      step: s,
      required: U,
      disabled: b
    } = w, _ = k(w, [
      "size",
      "startAction",
      "name",
      "hint",
      "error",
      "label",
      "labelAction",
      "locale",
      "id",
      "onValueChange",
      "value",
      "step",
      "required",
      "disabled"
    ]);
    const [i, l] = Q(c == null ? K : String(c)), H = le("numberinput", B), M = z || $(), g = R(new ee(M)), N = R(new re($(), { maximumFractionDigits: 20 })), W = (m) => {
      const d = m.target.value;
      if (g.current.isValidPartialNumber(d)) {
        const p = d === "" ? void 0 : g.current.parse(d);
        p === void 0 || isNaN(p) ? u(void 0) : u(p), l(m.target.value);
      }
    }, I = (m) => {
      if (i === void 0) {
        u(s), l(String(s));
        return;
      }
      if (isNaN(i)) {
        const d = g.current.parse(i), f = (isNaN(d) ? 0 : d) + s, y = N.current.format(f);
        u(f), l(m ? String(f) : y);
        return;
      }
      u(c + s), l(String(c + s));
    }, F = (m) => {
      if (i === void 0) {
        u(-s), l(String(-s));
        return;
      }
      if (isNaN(i)) {
        const d = g.current.parse(i), f = (isNaN(d) ? 0 : d) - s, y = N.current.format(f);
        u(f), l(m ? String(f) : y);
        return;
      }
      u(c - s), l(String(c - s));
    }, X = (m) => {
      if (!b)
        switch (m.key) {
          case O.DOWN: {
            m.preventDefault(), F(!0);
            break;
          }
          case O.UP: {
            m.preventDefault(), I(!0);
            break;
          }
        }
    }, Y = () => {
      l(i != null ? i : K);
    }, G = () => {
      l(c === void 0 ? void 0 : N.current.format(c));
    };
    return /* @__PURE__ */ n.createElement(te, {
      name: t,
      hint: a,
      error: L,
      id: H
    }, /* @__PURE__ */ n.createElement(se, {
      spacing: 1
    }, E && /* @__PURE__ */ n.createElement(oe, {
      required: U,
      action: T
    }, E), /* @__PURE__ */ n.createElement(ne, S({
      ref: j,
      startAction: o,
      disabled: b,
      type: "text",
      inputmode: "decimal",
      onChange: W,
      onKeyDown: X,
      onBlur: G,
      onFocus: Y,
      value: i != null ? i : "",
      size: e,
      endAction: /* @__PURE__ */ n.createElement(n.Fragment, null, /* @__PURE__ */ n.createElement(q, {
        disabled: b,
        "aria-hidden": !0,
        reverse: !0,
        onClick: () => {
          I();
        },
        tabIndex: -1,
        type: "button",
        "data-testid": "ArrowUp"
      }, /* @__PURE__ */ n.createElement(V, {
        as: P,
        color: "neutral500"
      })), /* @__PURE__ */ n.createElement(q, {
        disabled: b,
        "aria-hidden": !0,
        onClick: () => {
          F();
        },
        tabIndex: -1,
        type: "button",
        "data-testid": "ArrowDown"
      }, /* @__PURE__ */ n.createElement(V, {
        as: P,
        color: "neutral500"
      })))
    }, _)), /* @__PURE__ */ n.createElement(ie, null), /* @__PURE__ */ n.createElement(ae, null)));
  }
);
x.displayName = "NumberInput";
x.defaultProps = {
  "aria-label": void 0,
  disabled: !1,
  error: void 0,
  hint: void 0,
  id: void 0,
  label: void 0,
  labelAction: void 0,
  required: !1,
  size: "M",
  startAction: void 0,
  step: 1,
  value: void 0
};
x.propTypes = {
  "aria-label": r.string,
  disabled: r.bool,
  error: r.string,
  hint: r.oneOfType([r.string, r.node, r.arrayOf(r.node)]),
  id: r.string,
  label: r.string,
  labelAction: r.element,
  locale: r.string,
  name: r.string.isRequired,
  onValueChange: r.func.isRequired,
  required: r.bool,
  size: r.oneOf(Object.keys(C.input)),
  startAction: r.element,
  step: r.number,
  value: r.number
};
export {
  x as NumberInput
};
