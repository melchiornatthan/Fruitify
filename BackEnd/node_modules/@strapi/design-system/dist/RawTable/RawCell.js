var K = Object.defineProperty, L = Object.defineProperties;
var O = Object.getOwnPropertyDescriptors;
var i = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, y = Object.prototype.propertyIsEnumerable;
var T = (e, o, r) => o in e ? K(e, o, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[o] = r, h = (e, o) => {
  for (var r in o || (o = {}))
    x.call(o, r) && T(e, r, o[r]);
  if (i)
    for (var r of i(o))
      y.call(o, r) && T(e, r, o[r]);
  return e;
}, I = (e, o) => L(e, O(o));
var w = (e, o) => {
  var r = {};
  for (var c in e)
    x.call(e, c) && o.indexOf(c) < 0 && (r[c] = e[c]);
  if (e != null && i)
    for (var c of i(e))
      o.indexOf(c) < 0 && y.call(e, c) && (r[c] = e[c]);
  return r;
};
import v, { useRef as D, useState as U, useLayoutEffect as R } from "react";
import a from "prop-types";
import { Box as q } from "../Box/Box.js";
import { getFocusableNodes as m, getFocusableNodesWithKeyboardNav as N } from "../helpers/getFocusableNodes.js";
import { KeyboardKeys as d } from "../helpers/keyboardKeys.js";
import { useTable as S } from "./RawTableContext.js";
const B = (e) => /* @__PURE__ */ v.createElement(g, I(h({}, e), {
  as: "th"
})), g = (c) => {
  var E = c, { coords: e, as: o } = E, r = w(E, ["coords", "as"]);
  const l = D(null), { rowIndex: P, colIndex: A, setTableValues: F } = S(), [f, p] = U(!1), k = (t) => {
    const n = m(l.current, !0);
    if (!(n.length === 0 || n.length === 1 && N(n).length === 0)) {
      if (n.length > 1 && !Boolean(n.find((s) => s.tagName !== "BUTTON"))) {
        t.preventDefault();
        const s = n.findIndex((u) => u === document.activeElement);
        if (t.key === d.RIGHT) {
          const u = n[s + 1];
          u && (t.stopPropagation(), u.focus());
        } else if (t.key === d.LEFT) {
          const u = n[s - 1];
          u && (t.stopPropagation(), u.focus());
        }
        return;
      }
      t.key === d.ENTER && !f ? p(!0) : (t.key === d.ESCAPE || t.key === d.ENTER) && f ? (p(!1), l.current.focus()) : f && t.stopPropagation();
    }
  }, b = P === e.row - 1 && A === e.col - 1;
  return R(() => {
    const t = m(l.current, !0);
    t.length === 0 || t.length === 1 && N(t).length !== 0 || t.length > 1 && Boolean(t.find((n) => n.tagName !== "BUTTON")) ? (l.current.setAttribute("tabIndex", !f && b ? 0 : -1), t.forEach((n, s) => {
      n.setAttribute("tabIndex", f ? 0 : -1), f && s === 0 && n.focus();
    })) : t.forEach((n) => {
      n.setAttribute("tabIndex", b ? 0 : -1);
    });
  }, [f, b]), R(() => {
    const t = m(l.current, !0), n = () => {
      t.length >= 1 && (N(t).length !== 0 || !Boolean(t.find((s) => s.tagName !== "BUTTON"))) && p(!0), F({ rowIndex: e.row - 1, colIndex: e.col - 1 });
    };
    return t.forEach((s) => {
      s.addEventListener("focus", n);
    }), () => {
      m(l.current, !0).forEach((u) => {
        u.removeEventListener("focus", n);
      });
    };
  }, []), /* @__PURE__ */ v.createElement(q, h({
    as: o || "td",
    ref: l,
    onKeyDown: k
  }, r));
};
B.defaultProps = {
  coords: {}
};
B.propTypes = {
  ["aria-colindex"]: a.number.isRequired,
  children: a.node,
  coords: a.shape({
    col: a.number,
    row: a.number
  })
};
g.defaultProps = {
  coords: {}
};
g.propTypes = {
  ["aria-colindex"]: a.number.isRequired,
  as: a.oneOf(["td", "th"]),
  children: a.node,
  coords: a.shape({
    col: a.number,
    row: a.number
  })
};
export {
  g as RawTd,
  B as RawTh
};
