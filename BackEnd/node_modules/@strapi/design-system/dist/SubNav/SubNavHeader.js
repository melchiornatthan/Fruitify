import e, { useState as w, useRef as p, useEffect as x } from "react";
import r from "prop-types";
import D from "styled-components";
import I from "@strapi/icons/Search";
import { Flex as K } from "../Flex/Flex.js";
import { Typography as P } from "../Typography/Typography.js";
import { IconButton as k } from "../IconButton/IconButton.js";
import { Box as n } from "../Box/Box.js";
import { Divider as O } from "../Divider/Divider.js";
import { Searchbar as F } from "../Searchbar/Searchbar.js";
import { SearchForm as _ } from "../Searchbar/SearchForm.js";
import { useId as $ } from "../helpers/useId.js";
import { usePrevious as j } from "../helpers/usePrevious.js";
import { KeyboardKeys as q } from "../helpers/keyboardKeys.js";
const d = D(O)`
  width: ${24 / 16}rem;
  background-color: ${({ theme: l }) => l.colors.neutral200};
`, u = ({ as: l, label: f, searchLabel: s, searchable: g, onChange: h, value: b, onClear: E, onSubmit: S, id: y }) => {
  const [a, c] = w(!1), C = j(a), v = $("subnav-searchbar-clear", y), o = p(), i = p();
  x(() => {
    a && o.current && o.current.focus(), C && !a && i.current && i.current.focus();
  }, [a]);
  const B = () => {
    c((t) => !t);
  }, T = (t) => {
    E(t), o.current.focus();
  }, R = (t) => {
    var m;
    ((m = t.relatedTarget) == null ? void 0 : m.id) !== v && c(!1);
  }, L = (t) => {
    t.key === q.ESCAPE && c(!1);
  };
  return a ? /* @__PURE__ */ e.createElement(n, {
    paddingLeft: 4,
    paddingTop: 5,
    paddingBottom: 2,
    paddingRight: 4
  }, /* @__PURE__ */ e.createElement(_, null, /* @__PURE__ */ e.createElement(F, {
    name: "searchbar",
    value: b,
    onChange: h,
    placeholder: "e.g: strapi-plugin-abcd",
    onKeyDown: L,
    ref: o,
    onBlur: R,
    onClear: T,
    onSubmit: S,
    clearLabel: "Clear",
    size: "S"
  }, s)), /* @__PURE__ */ e.createElement(n, {
    paddingLeft: 2,
    paddingTop: 4
  }, /* @__PURE__ */ e.createElement(d, null))) : /* @__PURE__ */ e.createElement(n, {
    paddingLeft: 6,
    paddingTop: 6,
    paddingBottom: 2,
    paddingRight: 4
  }, /* @__PURE__ */ e.createElement(K, {
    justifyContent: "space-between",
    alignItems: "flex-start"
  }, /* @__PURE__ */ e.createElement(P, {
    variant: "beta",
    as: l
  }, f), g && /* @__PURE__ */ e.createElement(k, {
    ref: i,
    onClick: B,
    label: s,
    icon: /* @__PURE__ */ e.createElement(I, null)
  })), /* @__PURE__ */ e.createElement(n, {
    paddingTop: 4
  }, /* @__PURE__ */ e.createElement(d, null)));
};
u.defaultProps = {
  as: "h2",
  searchable: !1,
  onChange: () => {
  },
  onClear: () => {
  },
  onSubmit: () => {
  },
  value: "",
  searchLabel: "",
  id: void 0
};
u.propTypes = {
  as: r.string,
  id: r.string,
  label: r.string.isRequired,
  onChange: r.func,
  onClear: r.func,
  onSubmit: r.func,
  searchLabel: r.string,
  searchable: r.bool,
  value: r.string
};
export {
  u as SubNavHeader
};
