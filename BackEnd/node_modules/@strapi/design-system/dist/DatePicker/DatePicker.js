var S = Object.defineProperty;
var c = Object.getOwnPropertySymbols;
var h = Object.prototype.hasOwnProperty, k = Object.prototype.propertyIsEnumerable;
var v = (t, a, e) => a in t ? S(t, a, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[a] = e, E = (t, a) => {
  for (var e in a || (a = {}))
    h.call(a, e) && v(t, e, a[e]);
  if (c)
    for (var e of c(a))
      k.call(a, e) && v(t, e, a[e]);
  return t;
};
var R = (t, a) => {
  var e = {};
  for (var n in t)
    h.call(t, n) && a.indexOf(n) < 0 && (e[n] = t[n]);
  if (t != null && c)
    for (var n of c(t))
      a.indexOf(n) < 0 && k.call(t, n) && (e[n] = t[n]);
  return e;
};
import o, { useState as V, useRef as P } from "react";
import r from "prop-types";
import _ from "@strapi/icons/Calendar";
import j from "@strapi/icons/Cross";
import { sizes as w } from "../themes/sizes.js";
import { TextInput as M } from "../TextInput/TextInput.js";
import { DatePickerWrapper as F, DatePickerButton as G, IconBox as H } from "./components.js";
import { DatePickerCalendar as J } from "./DatePickerCalendar.js";
import { formatDate as O } from "./utils/formatDate.js";
import { useId as K } from "../helpers/useId.js";
import { getDefaultLocale as N } from "../helpers/getDefaultLocale.js";
const y = (Q) => {
  var m = Q, {
    ariaLabel: t,
    initialDate: a,
    selectedDate: e,
    onChange: n,
    label: s,
    locale: I,
    selectedDateLabel: L,
    onClear: u,
    clearLabel: x,
    disabled: i,
    id: z
  } = m, B = R(m, [
    "ariaLabel",
    "initialDate",
    "selectedDate",
    "onChange",
    "label",
    "locale",
    "selectedDateLabel",
    "onClear",
    "clearLabel",
    "disabled",
    "id"
  ]);
  const T = K("datepicker", z), [d, f] = V(!1), l = P(null), b = P(null), D = I || N(), g = e ? O(e, D) : "", C = () => {
    i || f((p) => !p);
  }, W = () => {
    i || (u(), b.current.focus());
  }, q = (p) => {
    n(p), f(!1);
  }, A = () => {
    f(!1);
  };
  return /* @__PURE__ */ o.createElement(F, {
    bold: d
  }, /* @__PURE__ */ o.createElement(M, E({
    ref: l,
    onClick: C,
    onChange: () => {
    },
    value: g,
    startAction: /* @__PURE__ */ o.createElement(G, {
      ref: b,
      onClick: C,
      "aria-label": e ? L(O(e, D)) : s,
      type: "button",
      "aria-disabled": i
    }, /* @__PURE__ */ o.createElement(_, {
      "aria-hidden": !0
    })),
    endAction: u && g ? /* @__PURE__ */ o.createElement(H, {
      as: "button",
      onClick: W,
      "aria-label": x,
      "aria-disabled": i
    }, /* @__PURE__ */ o.createElement(j, null)) : void 0,
    "aria-autocomplete": "none",
    label: s,
    "aria-label": t,
    disabled: i,
    id: T
  }, B)), l.current && l.current.inputWrapperRef && d && /* @__PURE__ */ o.createElement(J, {
    selectedDate: e,
    initialDate: a,
    onChange: q,
    onEscape: A,
    popoverSource: l.current.inputWrapperRef,
    label: s || t
  }));
};
y.defaultProps = {
  ariaLabel: void 0,
  clearLabel: void 0,
  disabled: !1,
  id: void 0,
  label: void 0,
  initialDate: new Date(),
  onClear: void 0,
  placeholder: void 0,
  selectedDate: void 0,
  size: "M"
};
y.propTypes = {
  ariaLabel: r.string,
  clearLabel: r.string,
  disabled: r.bool,
  id: r.string,
  initialDate: r.instanceOf(Date),
  label: r.string,
  locale: r.string,
  maxDate: r.instanceOf(Date),
  minDate: r.instanceOf(Date),
  onChange: r.func.isRequired,
  onClear: r.func,
  placeholder: r.string,
  selectedDate: r.instanceOf(Date),
  selectedDateLabel: r.func.isRequired,
  size: r.oneOf(Object.keys(w.input))
};
export {
  y as DatePicker
};
